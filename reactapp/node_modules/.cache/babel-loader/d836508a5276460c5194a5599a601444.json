{"ast":null,"code":"// redux-thunk 中间件配置\n// 特点: action 异步管理 axios接口\n// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension'\n// import thunk from 'redux-thunk';\n// import reducer from './reducer'\n//\n// let store = createStore(\n//     reducer,\n//     composeWithDevTools(applyMiddleware(thunk)),\n// );\n// // applyMiddleware(...middleware), 直接thunk展开\n// // redux使用这两个中间件 window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// export default store\n// redux-saga 中间件配置\n//  特点: 文件单独管理 axios。接口  大型项目更优，API多\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducer';\nimport mySaga from './sagas'; // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware(); // mount it on the Store\n\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware)); // then run the saga\n\nsagaMiddleware.run(mySaga); // render the application\n\nexport default store;","map":{"version":3,"sources":["/Users/w770s/learning/reactapp/src/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","reducer","mySaga","sagaMiddleware","store","run"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,SAAnB,C,CAEA;;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CACA;;AACA,MAAMI,KAAK,GAAGN,WAAW,CACrBG,OADqB,EAErBF,eAAe,CAACI,cAAD,CAFM,CAAzB,C,CAKA;;AACAA,cAAc,CAACE,GAAf,CAAmBH,MAAnB,E,CAEA;;AAEA,eAAeE,KAAf","sourcesContent":["// redux-thunk 中间件配置\n// 特点: action 异步管理 axios接口\n// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension'\n// import thunk from 'redux-thunk';\n// import reducer from './reducer'\n//\n// let store = createStore(\n//     reducer,\n//     composeWithDevTools(applyMiddleware(thunk)),\n// );\n// // applyMiddleware(...middleware), 直接thunk展开\n// // redux使用这两个中间件 window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// export default store\n\n// redux-saga 中间件配置\n//  特点: 文件单独管理 axios。接口  大型项目更优，API多\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport reducer from './reducer'\nimport mySaga from './sagas'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n// mount it on the Store\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware)\n)\n\n// then run the saga\nsagaMiddleware.run(mySaga)\n\n// render the application\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}