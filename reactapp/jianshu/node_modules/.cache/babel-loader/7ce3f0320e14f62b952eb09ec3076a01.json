{"ast":null,"code":"import { takeEvery, put } from 'redux-saga/effects';\nimport { actionCreator, actionTypes } from '../common/Header/store';\nimport { actionCreator as Homeaction, actionTypes as Hometype } from '../page/home/store';\nimport { actionCreator as Detailaction, actionTypes as Detailtype } from '../page/detail/store';\nimport { actionCreator as Loginaction, actionTypes as Logintype } from '../page/login/store';\nimport axios from 'axios';\n\nfunction* mySaga() {\n  yield takeEvery(actionTypes.COMPONENT_DID_MOUNTED, fetchUser); // 捕获到HANDEL_INPUT_ONFOCUS，调用fetchUser 方法\n\n  yield takeEvery(Hometype.FIRSTSHOW_WRITER_LIST, fetchWriter);\n  yield takeEvery(Hometype.GET_MORE_ARTICLE, moreArticle);\n  yield takeEvery(Detailtype.GET_MORE_ARTICLEDETAIL, forArticleDetail);\n  yield takeEvery(Logintype.HANDLE_LOGIN, changelogin);\n}\n\nfunction* fetchUser() {\n  const res = yield axios.get('api/headerSearchList.json');\n  const action = actionCreator.onGetAjaxRightNow(res.data.data);\n  yield put(action); // generator是分段执行的函数 记得使用 yield(暂停执行的标记) yield标识交换控制权 协程 协作的线程”或者“协作的函数”\n  // 每一次调用next()方法 内部指针就从函数头部或上一次停下里的地方开始执行，直到遇到下一个yield表达式位置\n  // 通过next函数，可以执行对应的yield表达式，且next()函数还可以带参数，该参数可以作为上一次yield表达式的返回值，->\n  // ->因为yield本身是没有返回值的，如果next()中不带参数，则yield每次运行之后的返回值都是为undefined;\n  // next()是将yield表达式替换成一个值\n  // throw()是将yield表达式替换成一个throw语句\n  // return()是将yield表达式替换成一个return语句\n  // yield如果后边带一个* for of\n}\n\nfunction* fetchWriter() {\n  const res = yield axios.get('api/writerListChange.json');\n  const action = Homeaction.apiAllHomeList(res.data.data);\n  yield put(action);\n}\n\nfunction* moreArticle(action) {\n  const page = action.page;\n\n  try {\n    const res = yield axios.get(\"api/moreArticle.json?page=\".concat(page));\n    const action = Homeaction.youNeedArticle(res.data.data);\n    yield put(action);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* forArticleDetail(action) {\n  const id = action.id;\n\n  try {\n    const res = yield axios.get('api/pageDetailData.json');\n    const action = Detailaction.showDetailPage(res.data.data, id);\n    yield put(action);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* changelogin(action) {\n  const account = action.account;\n  const password = action.password;\n\n  try {\n    const res = yield axios.get('api/login.json?account' + account + \"&password\" + password);\n    console.log(res);\n    const action = Loginaction.changehasLogin();\n    yield put(action);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/Users/w770s/learning/reactapp/jianshu/src/store/saga.js"],"names":["takeEvery","put","actionCreator","actionTypes","Homeaction","Hometype","Detailaction","Detailtype","Loginaction","Logintype","axios","mySaga","COMPONENT_DID_MOUNTED","fetchUser","FIRSTSHOW_WRITER_LIST","fetchWriter","GET_MORE_ARTICLE","moreArticle","GET_MORE_ARTICLEDETAIL","forArticleDetail","HANDLE_LOGIN","changelogin","res","get","action","onGetAjaxRightNow","data","apiAllHomeList","page","youNeedArticle","e","console","log","id","showDetailPage","account","password","changehasLogin"],"mappings":"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","sourcesContent":["import { takeEvery, put} from 'redux-saga/effects'\nimport {actionCreator, actionTypes} from '../common/Header/store'\nimport {actionCreator as Homeaction,actionTypes as Hometype } from '../page/home/store'\nimport {actionCreator as Detailaction,actionTypes as Detailtype } from '../page/detail/store'\nimport {actionCreator as Loginaction,actionTypes as Logintype } from '../page/login/store'\nimport axios from 'axios'\n\nfunction* mySaga() {\n    yield takeEvery(actionTypes.COMPONENT_DID_MOUNTED, fetchUser); // 捕获到HANDEL_INPUT_ONFOCUS，调用fetchUser 方法\n    yield takeEvery(Hometype.FIRSTSHOW_WRITER_LIST, fetchWriter);\n    yield takeEvery(Hometype.GET_MORE_ARTICLE, moreArticle);\n    yield takeEvery(Detailtype.GET_MORE_ARTICLEDETAIL, forArticleDetail);\n    yield takeEvery(Logintype.HANDLE_LOGIN, changelogin);\n}\n\nfunction* fetchUser() {\n    const res = yield axios.get('api/headerSearchList.json')\n    const action = actionCreator.onGetAjaxRightNow(res.data.data)\n    yield put(action)\n    // generator是分段执行的函数 记得使用 yield(暂停执行的标记) yield标识交换控制权 协程 协作的线程”或者“协作的函数”\n    // 每一次调用next()方法 内部指针就从函数头部或上一次停下里的地方开始执行，直到遇到下一个yield表达式位置\n    // 通过next函数，可以执行对应的yield表达式，且next()函数还可以带参数，该参数可以作为上一次yield表达式的返回值，->\n    // ->因为yield本身是没有返回值的，如果next()中不带参数，则yield每次运行之后的返回值都是为undefined;\n    // next()是将yield表达式替换成一个值\n    // throw()是将yield表达式替换成一个throw语句\n    // return()是将yield表达式替换成一个return语句\n    // yield如果后边带一个* for of\n}\n\nfunction* fetchWriter() {\n    const res = yield axios.get('api/writerListChange.json')\n    const action = Homeaction.apiAllHomeList(res.data.data)\n    yield put(action)\n}\n\nfunction* moreArticle(action) {\n    const page = action.page\n    try{\n        const res = yield axios.get(`api/moreArticle.json?page=${page}`)\n        const action = Homeaction.youNeedArticle(res.data.data)\n        yield put(action)\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\n\nfunction* forArticleDetail(action) {\n    const id = action.id\n    try{\n        const res = yield axios.get('api/pageDetailData.json')\n        const action = Detailaction.showDetailPage(res.data.data,id)\n        yield put(action)\n    }\n    catch (e) {\n        console.log(e)\n    }\n}\n\n\nfunction* changelogin(action) {\n    const account = action.account\n    const password = action.password\n    try{\n        const res = yield axios.get('api/login.json?account'+account+\"&password\"+password)\n        console.log(res)\n        const action = Loginaction.changehasLogin()\n        yield put(action)\n    }\n    catch (e) {\n        console.log(e)\n    }\n}\n\nexport default mySaga;\n"]},"metadata":{},"sourceType":"module"}