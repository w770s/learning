{"ast":null,"code":"var _jsxFileName = \"/Users/w770s/learning/reactapp/jianshu/src/page/home/component/recommend.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RecommendWrapper, RecommendItem, Qrcard, QrcardWord, BigImg } from '../style';\nimport { actionCreator } from '../store';\n\nclass Recommend extends Component {\n  showBigQrcode() {\n    if (this.props.showQrcode) {\n      return React.createElement(BigImg, {\n        className: \"triangle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"big-pic\",\n        alt: \"\",\n        src: \"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=620579142,3051099267&fm=26&gp=0.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          list = _this$props.list,\n          handleshowQrcode = _this$props.handleshowQrcode,\n          handlecloseQrcode = _this$props.handlecloseQrcode; // immutable 数组.都得用其方法。map 也是\n\n    return React.createElement(RecommendWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, list.map(item => React.createElement(RecommendItem, {\n      key: item.get('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.get('value'))), React.createElement(Qrcard, {\n      onMouseEnter: handleshowQrcode,\n      onMouseLeave: handlecloseQrcode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"recommend-pic\",\n      alt: \"\",\n      src: \"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=620579142,3051099267&fm=26&gp=0.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(QrcardWord, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recommend-download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\u4E0B\\u8F7D\\u7B80\\u4E66\\u624B\\u673AApp\", React.createElement(\"i\", {\n      className: \"iconfont loadto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\uE625\")), React.createElement(\"div\", {\n      className: \"recommend-keyword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\u968F\\u65F6\\u968F\\u5730\\u53D1\\u73B0\\u548C\\u521B\\u4F5C\\u5185\\u5BB9\")), this.showBigQrcode()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  list: state.getIn(['home', 'RecommendList']),\n  showQrcode: state.getIn(['home', 'showQrcode'])\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleshowQrcode() {\n      dispatch(actionCreator.showBigQrcode());\n    },\n\n    handlecloseQrcode() {\n      dispatch(actionCreator.closeBigQrcode());\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recommend);","map":{"version":3,"sources":["/Users/w770s/learning/reactapp/jianshu/src/page/home/component/recommend.js"],"names":["React","Component","connect","RecommendWrapper","RecommendItem","Qrcard","QrcardWord","BigImg","actionCreator","Recommend","showBigQrcode","props","showQrcode","render","list","handleshowQrcode","handlecloseQrcode","map","item","get","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","closeBigQrcode"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA6DC,MAA7D,QAA0E,UAA1E;AACA,SAAQC,aAAR,QAA4B,UAA5B;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAiC;AAE7BS,EAAAA,aAAa,GAAE;AACX,QAAG,KAAKC,KAAL,CAAWC,UAAd,EAA0B;AACtB,aACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAC,EAA7B;AACK,QAAA,GAAG,EAAC,+FADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH,KAPD,MAQI;AACI,aAAO,IAAP;AACP;AACJ;;AACDC,EAAAA,MAAM,GAAG;AAAA,wBAC+C,KAAKF,KADpD;AAAA,UACEG,IADF,eACEA,IADF;AAAA,UACQC,gBADR,eACQA,gBADR;AAAA,UAC0BC,iBAD1B,eAC0BA,iBAD1B,EAC2D;;AAChE,WACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQF,IAAI,CAACG,GAAL,CAAUC,IAAD,IACL,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAL,CAAS,IAAT,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,IAAI,CAACC,GAAL,CAAS,OAAT,CAArC,CADJ,CAFR,EAMI,oBAAC,MAAD;AACI,MAAA,YAAY,EAAEJ,gBADlB;AAEI,MAAA,YAAY,EAAEC,iBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAC,EAAnC;AAAsC,MAAA,GAAG,EAAC,+FAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EALJ,CALJ,EAYK,KAAKN,aAAL,EAZL,CANJ,CADJ;AAuBH;;AAxC4B;;AA2CjC,MAAMU,eAAe,GAAIC,KAAD,KAAW;AAC/BP,EAAAA,IAAI,EAAEO,KAAK,CAACC,KAAN,CAAY,CAAC,MAAD,EAAQ,eAAR,CAAZ,CADyB;AAE/BV,EAAAA,UAAU,EAAES,KAAK,CAACC,KAAN,CAAY,CAAC,MAAD,EAAQ,YAAR,CAAZ;AAFmB,CAAX,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAa;AACpC,SAAM;AACFT,IAAAA,gBAAgB,GAAE;AACdS,MAAAA,QAAQ,CAAChB,aAAa,CAACE,aAAd,EAAD,CAAR;AACH,KAHC;;AAIFM,IAAAA,iBAAiB,GAAE;AACfQ,MAAAA,QAAQ,CAAChB,aAAa,CAACiB,cAAd,EAAD,CAAR;AACH;;AANC,GAAN;AAQH,CATD;;AAWA,eAAevB,OAAO,CAACkB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4Cd,SAA5C,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport {RecommendWrapper, RecommendItem, Qrcard, QrcardWord, BigImg} from '../style'\nimport {actionCreator} from '../store'\n\nclass Recommend extends Component{\n\n    showBigQrcode(){\n        if(this.props.showQrcode) {\n            return (\n                <BigImg className='triangle'>\n                    <img className='big-pic' alt=''\n                         src='https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=620579142,3051099267&fm=26&gp=0.jpg'/>\n                </BigImg>\n            )\n        }\n        else{\n                return null\n        }\n    }\n    render() {\n        const {list, handleshowQrcode, handlecloseQrcode} = this.props; // immutable 数组.都得用其方法。map 也是\n        return(\n            <RecommendWrapper>\n                {\n                    list.map((item)=>(\n                        <RecommendItem key={item.get('id')}>{item.get('value')}</RecommendItem>\n                    ))\n                }\n                <Qrcard\n                    onMouseEnter={handleshowQrcode}\n                    onMouseLeave={handlecloseQrcode}\n                >\n                    <img className='recommend-pic' alt='' src='https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=620579142,3051099267&fm=26&gp=0.jpg' />\n                    <QrcardWord>\n                        <div className='recommend-download'>\n                            下载简书手机App\n                            <i className='iconfont loadto'>&#xe625;</i>\n                        </div>\n                        <div className='recommend-keyword'>随时随地发现和创作内容</div>\n                    </QrcardWord>\n                    {this.showBigQrcode()}\n                </Qrcard>\n            </RecommendWrapper>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>({\n    list: state.getIn(['home','RecommendList']),\n    showQrcode: state.getIn(['home','showQrcode'])\n})\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        handleshowQrcode(){\n            dispatch(actionCreator.showBigQrcode())\n        },\n        handlecloseQrcode(){\n            dispatch(actionCreator.closeBigQrcode())\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Recommend)\n"]},"metadata":{},"sourceType":"module"}